version: '3.9'

services:
  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - backend-net

  mongodb:
    image: mongo:6
    container_name: mongo
    command: ["--replSet", "rs0", "--bind_ip_all"]
    ports:
      - "27017:27017"
    networks:
      - backend-net
    volumes:
      - mongo-data:/data/db

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:9.1.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - backend-net
    volumes:
      - es-data:/usr/share/elasticsearch/data

  backend:
    build:
      context: ./backend
      dockerfile: backend-service.dockerfile
    container_name: dashboard-backend
    ports:
      - "3000:3000"
    volumes:
      - type: bind
        source: ./backend/src
        target: /app/backend/src
    networks:
      - backend-net
    depends_on:
      - mongodb
      - redis
      - elasticsearch
    environment:
      - MONGO_URL=mongodb://mongo:27017/errors
      - REDIS_URL=redis://redis:6379
      - ELASTIC_URL=http://elasticsearch:9200
      - PORT=3000

  frontend:
    image: frontend
    build:
      context: ./frontend
    ports:
      - '4200:4200'
    environment:
      - BACKEND_HOST=http://localhost:3000
    volumes:
      - type: bind
        source: ./frontend/src
        target: /app/frontend/src
    depends_on:
      - backend
    links:
      - backend
    networks:
      - backend-net
    restart: unless-stopped
    healthcheck:
          test: curl --fail http://localhost:4200/ || exit 1
          interval: 40s
          timeout: 30s
          retries: 3
          start_period: 60s

networks:
  backend-net:

volumes:
  mongo-data:
  es-data:
